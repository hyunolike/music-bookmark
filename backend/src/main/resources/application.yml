spring:
  profiles:
    group:
      "local": "local_db, common, oauth_info"
      "prod": "prod_db, common, oauth_info"

---
spring:
  config:
    activate:
      on-profile: "common"
  flyway:
    locations: classpath:/db/migration # migration 파일들이 위치하는 directory
    sql-migration-suffixes: ddl        # 파일 확장자
    baseline-on-migrate: true          # flyway_schema_history 테이블을 자동으로 생성할지 여부
    baseline-version: 0                # 최초 버전 정보
    enabled: false
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  thymeleaf:
    cache: false
  web:
    resources:
      chain:
        enabled: true
        strategy:
          content:
            enabled: true
            paths: /**
  thymeleaf3:
    decoupled-logic: true
server:
  port: 9061

---
spring:
  config:
    activate:
      on-profile: "local_db"
  datasource:
    url: jdbc:mariadb://localhost:3377/musicmark
    username: root
    password:
    driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    show-sql: true

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace

---
spring:
  config:
    activate:
      on-profile: "oauth_info"
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 671682884276-ltg9ebrvsp0bk2roqqac7lmnsnia3ov7.apps.googleusercontent.com
            client-secret: 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
          facebook:
            client-id: 819356595914645
            client-secret: f10bfd147d2526e541e6b0bbf177407b
          kakao:
            client-id: 394bacee1966dd73bcb1beb31c3ad304
            client-secret: zmHXTtfGEYwUv5P3XLgTR6UCEXNo3uM6
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
            client-name: kakao
          naver:
            client-id: jFJ9R8V6qhEiA8Prkcj3
            client-secret: Kw_AJIeeRM
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - nickname
            client-name: naver

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

---
spring:
  config:
    activate:
      on-profile: "prod_db"
  datasource:
    url: jdbc:mariadb://mariadb.musicmark.prod:3306/musicmark
    username: root
    password:
    driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    show-sql: true

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace
